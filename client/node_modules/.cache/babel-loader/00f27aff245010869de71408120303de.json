{"ast":null,"code":"\"use strict\";\n\n// ResourceNamespace allows you to create nested resources, i.e. `stripe.issuing.cards`.\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.resourceNamespace = void 0;\n// It also works recursively, so you could do i.e. `stripe.billing.invoicing.pay`.\nfunction ResourceNamespace(stripe, resources) {\n  for (var name in resources) {\n    var camelCaseName = name[0].toLowerCase() + name.substring(1);\n    var resource = new resources[name](stripe);\n    this[camelCaseName] = resource;\n  }\n}\nfunction resourceNamespace(namespace, resources) {\n  return function (stripe) {\n    return new ResourceNamespace(stripe, resources);\n  };\n}\nexports.resourceNamespace = resourceNamespace;","map":null,"metadata":{},"sourceType":"script"}
{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/home/hishamak/Desktop/mhak-react/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"/home/hishamak/Desktop/mhak-react/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PlatformFunctions = void 0;\nvar FetchHttpClient_js_1 = require(\"../net/FetchHttpClient.js\");\nvar SubtleCryptoProvider_js_1 = require(\"../crypto/SubtleCryptoProvider.js\");\n/**\n * Interface encapsulating various utility functions whose\n * implementations depend on the platform / JS runtime.\n */\nvar PlatformFunctions = /*#__PURE__*/function () {\n  function PlatformFunctions() {\n    _classCallCheck(this, PlatformFunctions);\n    this._fetchFn = null;\n    this._agent = null;\n  }\n  /**\n   * Gets uname with Node's built-in `exec` function, if available.\n   */\n  _createClass(PlatformFunctions, [{\n    key: \"getUname\",\n    value: function getUname() {\n      throw new Error('getUname not implemented.');\n    }\n    /**\n     * Generates a v4 UUID. See https://stackoverflow.com/a/2117523\n     */\n  }, {\n    key: \"uuid4\",\n    value: function uuid4() {\n      return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        var r = Math.random() * 16 | 0;\n        var v = c === 'x' ? r : r & 0x3 | 0x8;\n        return v.toString(16);\n      });\n    }\n    /**\n     * Compares strings in constant time.\n     */\n  }, {\n    key: \"secureCompare\",\n    value: function secureCompare(a, b) {\n      // return early here if buffer lengths are not equal\n      if (a.length !== b.length) {\n        return false;\n      }\n      var len = a.length;\n      var result = 0;\n      for (var i = 0; i < len; ++i) {\n        result |= a.charCodeAt(i) ^ b.charCodeAt(i);\n      }\n      return result === 0;\n    }\n    /**\n     * Creates an event emitter.\n     */\n  }, {\n    key: \"createEmitter\",\n    value: function createEmitter() {\n      throw new Error('createEmitter not implemented.');\n    }\n    /**\n     * Checks if the request data is a stream. If so, read the entire stream\n     * to a buffer and return the buffer.\n     */\n  }, {\n    key: \"tryBufferData\",\n    value: function tryBufferData(data) {\n      throw new Error('tryBufferData not implemented.');\n    }\n    /**\n     * Creates an HTTP client which uses the Node `http` and `https` packages\n     * to issue requests.\n     */\n  }, {\n    key: \"createNodeHttpClient\",\n    value: function createNodeHttpClient(agent) {\n      throw new Error('createNodeHttpClient not implemented.');\n    }\n    /**\n     * Creates an HTTP client for issuing Stripe API requests which uses the Web\n     * Fetch API.\n     *\n     * A fetch function can optionally be passed in as a parameter. If none is\n     * passed, will default to the default `fetch` function in the global scope.\n     */\n  }, {\n    key: \"createFetchHttpClient\",\n    value: function createFetchHttpClient(fetchFn) {\n      return new FetchHttpClient_js_1.FetchHttpClient(fetchFn);\n    }\n    /**\n     * Creates an HTTP client using runtime-specific APIs.\n     */\n  }, {\n    key: \"createDefaultHttpClient\",\n    value: function createDefaultHttpClient() {\n      throw new Error('createDefaultHttpClient not implemented.');\n    }\n    /**\n     * Creates a CryptoProvider which uses the Node `crypto` package for its computations.\n     */\n  }, {\n    key: \"createNodeCryptoProvider\",\n    value: function createNodeCryptoProvider() {\n      throw new Error('createNodeCryptoProvider not implemented.');\n    }\n    /**\n     * Creates a CryptoProvider which uses the SubtleCrypto interface of the Web Crypto API.\n     */\n  }, {\n    key: \"createSubtleCryptoProvider\",\n    value: function createSubtleCryptoProvider(subtleCrypto) {\n      return new SubtleCryptoProvider_js_1.SubtleCryptoProvider(subtleCrypto);\n    }\n  }, {\n    key: \"createDefaultCryptoProvider\",\n    value: function createDefaultCryptoProvider() {\n      throw new Error('createDefaultCryptoProvider not implemented.');\n    }\n  }]);\n  return PlatformFunctions;\n}();\nexports.PlatformFunctions = PlatformFunctions;","map":null,"metadata":{},"sourceType":"script"}